dimensions(x)
dimension(x)
dim(x)
apply(x, 2, mean)
apply(x, 1, mean)
apply(x, 3, mean)
apply(x, 1, sum)
apply(x, 1, average)
?quantile
y <- apply(x,1,quantile,probs=c(0.25,0.75))
y
nrow(y)
ncol(y)
a <- array(rnorm(2*2*10), c(2,2,10))
a
dim(a)
a[3]
a[1]
nrow(a)
ncol(a)
?gl
x <- c(rnorm(10),runif(10),rnorm(10,1))
x
x[1]
x[29]
x[31]
f <- gl(3,10)
split(x,f)
f <- gl(5,12)
split(x,f)
library(datasets)
head(airquality)
airquality
names(airquality)
airquality$Month
s <- split(airquality, airquality$Month)
s
s1 <- lapply(s, function(x) colmeans(x[,c("Ozone", "Solar.R","Wind")]))
s1 <- lapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R","Wind")]))
s1
s2 <- sapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R","Wind")]))
s2
s2 <- sapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R","Wind")]), na.rm=TRUE)
s2 <- sapply(s, function(x) colMeans(x[,c("Ozone", "Solar.R","Wind")], na.rm=TRUE))
s2
gl(1,5)
gl(2,5)
gl(3,5)
gl(5,2)
interaction(gl(3,5), gl(5,4))
?mapply
x <- 1:5
y <- c(1:5, rnorm(10))
x
y
mapply(function(x) sum(x), x, y)
mapply(function(x) {sum(x)}, x, y)
mapply(function(x) {mean(x)}, x, y)
mapply(function(n) {mean(n)}, x, y)
mapply(function(n) {mean(n)}, x, y, MoreArgs=NULL)
mapply(rep, 1:4, 4:1)
?invisible
?tapply
sum(x)
sumx1
traceback()
sum(x1)
traceback()
str(sum)
str(airquaity)
str(airquality)
str(airquality$Month)
str(airquality$Month[1])
str(airquality$Month[153])
library(datasets)
data(iris)
?iris
names(iris)
iris$Species
x <- splt(iris$Species)
x <- split(iris$Species)
?split
x <- iris$Species)
x <- iris$Species
x
y <- as.table(x)
y <- iris$Species == virginica
y <- iris$Species == "virginica"
y
z <- as.table(y)
z <- as.matrix(y)
z
x <- iris$Species
x[1]
x
names(x)
col(x)
numcol(x)
numCol(x)
ID(x)
x
?gl
nrows(x)
nrow(x)
x
str(x)
?split
y <- split(x)
y <- split(x,3)
y
split1 <- gl(3,100)
split1
y <- split(x,split1)
str(iris)
x1 < split(iris, iris$Species)
isir$Species
iris$Species
x1 < split(iris, iris$Species)
traceback()
debug()
x < split(iris, iris$Species)
x < split(iris, iris$Sepal.Length)
str(Sepal.Length)
str(iris$Sepal.Length)
library(datasets)
data(airquality)
airquality
str(airquality)
str(iris)
s <- split(airquality, airquality$Month)
s
str(airquality)
s <- split(airquality, airquality$Ozone)
a
str(iris)
x < split(iris, iris$Sepal.Length)
rowMeans(iris$Species)
rowMeans(iris)
gl1 <- gl(3, 150)
gl1
tapply(iris, gl, mean)
tapply(iris, gl1, mean)
gl1 <- gl(3, 150)
tapply(iris, gl, mean)
tapply(iris, gl1, mean)
iris$Species
str(iris$Species)
?str
str(iris$Species["virginica"])
mean(iris$Species["virginica"])
str(iris$Species["virginica"])
str(iris$Species["setosa"])
as.numeric(iris$Species)
as.numeric(iris$Species[3])
as.numeric(levels(iris$Species))
iris(,1:3)
iris[,1:3]
iris[,1:5]
iris[,1,5]
iris[,1]
aggregate(iris[,1:4], iris["Species"], function(x) mean(x))
apply(iris, 1 , mean)
rowMeans(iris[,1:4])
colMeans(iris[,1:4])
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
?apply
library(datasets)
data(mtcars)
names(mtcars)
nrow(mtcars)
?mtcars
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
mtcars$cyl
mean(mtcars$mpg, mtcars$cyl)
lapply(mtcars, mean)
?abs
?mtcars
with(mtcars, tapply(mpg, cyl, average))
with(mtcars, tapply(mpg, cyl, avg))
with(mtcars, tapply(mpg, cyl, ave))
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
?abs
abs1 <- with(mtcars, tapply(hp, cyl, mean))
abs1
abs(abs1)
debug(ls)
ls
1
debug(ls)
1
debug(ls)
ls
x <- matrix(1:4, 2,2)
quite
quit
exit
bye
x <- matrix(1:4, 2, 2)
x
solve(x)
y <- solve(x)
y
x*y
xy
x y
x * y
git clone https://github.com/gkumar10/ProgrammingAssignment2
git clone https://github.com/gkumar10/ProgrammingAssignment2/
?set
??set
?get
??get
x <- matrix(1:8,  4,2)
x
y <- solve(x)
x <- matrix(1:9,  3,3)
y <- solve(x)
x
x <- matrix(1:16,  4,4)
x
y <- solve(x)
?solve
solve(x)
x <- matrix(1:16,  2,2)
x
solve(x)
dimnames(x)
?determinant
det(x)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x)
x
y
x1 <- makeCacheMatrix(x)
x1
str(x1)
x3 <- matrix(1:6, 3,2)
x3
x1 <- makeCacheMatrix(x3)
x3 <- matrix(1:16, 4,4)
x3
x1 <- makeCacheMatrix(x3)
message("exiting function")
x1 <- makeCacheMatrix(x3)
x3
makeCacheMatrix(x3)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x3)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x3)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
x1
x2
x3
makeCacheMatrix(x3)
x1 <- matrix(1:4, 2,2)
x1
makeCacheMatrix(x1)
getmatrix*
getmatrix()
makeCacheMatrix()
names(x)
getmatrix
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x)
x
?list
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
x
makeCacheMatrix(x)
cacheSolve(x)
?list
source('~/Coursera/functions1.R')
makeVector(1:5)
source('~/Coursera/functions1.R')
makeVector(1:5)
cachemean(1:5)
cachemean(x)
x <- 1:5
makeVector(x)
cachemean(x)
makeVector(x)
names(x)
length(x)
x$getmean
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
x123 <- matrix(2:5, 2, 2)
makeCacheMatrix(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x123)
x
invx
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x123)
x123
class(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
class(x123)
makeCacheMatrix(x123)
x1234 <- matrix(1:6, 3,2)
makeCacheMatrix(x1234)
x1234 <- matrix(2:17, 4,4)
makeCacheMatrix(x1234)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x1234)
makeCacheMatrix(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x123)
x
makeCacheMatrix.x
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x123)
solve(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
solve(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
solve(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
solve(x123)
makeCacheMatrix(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x123)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(x123)
cacheSolve(x)
cacheSolve(x123)
cacheSolve()
makeCacheMatrix(x123)
invx
invx <- NULL
cacheSolve(x)
invx
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
x123
makeCacheMatrix(x123)
specialx
invx
invx <- is.NULL
invx <- is.NULL()
invx <- NULL
invx
cacheSolve(x)
x
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
cacheS
cacheSolve(x)
source('~/Coursera/ProgrammingAssignment2/cachematrix.R')
git commit -m
git commit -m "commiting programming assignment 2"
source('~/Coursera/HospitalQuality/best.R')
best("MD", "penumonia")
best("MD", "pneumonia")
best("MD", "heart attack")
best("MD", "heart.attack")
best("TX", "heart.attack")
best("TX", "heart.failure")
source('~/Coursera/HospitalQuality/best.R')
source('~/Coursera/HospitalQuality/best.R')
source('~/Coursera/HospitalQuality/best.R')
source('~/Coursera/HospitalQuality/best.R')
best("TX", "heart.failure")
best("TX", "heart failure")
outcome
outcome1
readfile <- read.csv("~/Coursera/HospitalQuality/outcome-of-care-measures.csv", colClasses="character", header=TRUE)
rfile <- readfile[,c(2,7,11,17,23)] #read 5 columns relevant to this function
names(rfile)
r <- grep("TX", rfile[,2], ignore.case=TRUE)
r
lowest <- min(rfile[r,4], na.rm=TRUE)
lowest
length(lowest)
lowest <- min(rfile[r,4], na.rm=FALSE)
lowest
rfile[r,4]
length(rfile[r,4], na.rm=TRUE
)
?min
lowest <- pmin(rfile[r,4], na.rm=FALSE)
lowest
lowest <- min(rfile[r,4], na.rm=FALSE)
lowest
min(rfile[r,4], na.rm=FALSE)
length(rfile)
names(rfile)
nrow(rfile)
ncol(rfile)
x1 <- c(1,2,3,-4,10.1, 1.1, 0.5)
min(x1)
max(x1)
max(as.number(x1))
max(as.numeric(x1))
min(as.numeric(x1))
min(rfile[r,5], na.rm=FALSE)
min(rfile[r,6], na.rm=FALSE)
min(rfile[r,3], na.rm=FALSE)
max(rfile[r,6], na.rm=FALSE)
max(rfile[r,3], na.rm=TRUE)
max(rfile[r,3], na.rm=TRUE)
max(rfile[r,3], na.rm=FALSE)
max(rfile[r,4], na.rm=FALSE)
min(rfile[r,3], na.rm=FALSE)
min(rfile[r,3], na.rm=TRUE)
min(rfile[r,4], na.rm=TRUE)
min(rfile[r,5], na.rm=TRUE)
rfile
names(rfile)
rfile[,4]
rfile[,5]
rfile[,4]
min(as.numeric(rfile[r,5]), na.rm=TRUE)
min(as.numeric(rfile[r,4]), na.rm=TRUE)
source('~/Coursera/HospitalQuality/best.R')
best("TX", "heart failure")
source('~/Coursera/HospitalQuality/best.R')
best("TX", "heart failure")
source('~/Coursera/HospitalQuality/best.R')
best("TX", "heart failure")
?suppressWarnings
suppressWarnings(min(as.numeric(rfile[r,5]), na.rm=TRUE))
source('~/Coursera/HospitalQuality/best.R')
best("TX", "heart failure")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
lo <- suppressWarnings(min(as.numeric(rfile[r,c]), na.rm=TRUE))
r
lo <- suppressWarnings(min(as.numeric(rfile[r,3]), na.rm=TRUE))
lo
r12 <- grep(lo, rfile[r,3])
r12
length(r12)
rfile[r[r12],1]
rfile[r[r12][1],1]
?order
order(rfile[r[r12],1])
v1 <- order(rfile[r[r12],1])
v1
v1[1]
order(rfile[r[r12],][1])
order(rfile[r[r12],])[1]
rfile[r[r12][1],1]
r12
source('~/Coursera/HospitalQuality/best.R')
best("TX", "heart attack")
source('~/Coursera/HospitalQuality/best.R')
best("TX", "heart attack")
source('~/Coursera/HospitalQuality/best.R')
best("TX", "heart attack")
source('~/Coursera/HospitalQuality/best.R')
best("TX", "heart attack")
v1
rfile[r[r12][1],1]
rfile[r[r12][v1[1]],1]
source('~/Coursera/HospitalQuality/best.R')
best("TX", "heart attack")
source('~/Coursera/HospitalQuality/best.R')
best("XX", "heart attack")
best("XX", "heart attac")
best("TX", "heart attac")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source("submitscript3.R")
getwd()
setwd('~/Coursera/HospitalQuality')
getwd()
source("submitscript3.R")
submit()
submit()
submit()
submit()
source('~/Coursera/HospitalQuality/rankhospital.R')
source('~/Coursera/HospitalQuality/rankhospital.R')
rankhospital("TX", "heart failure", 5000)
source('~/Coursera/HospitalQuality/rankhospital.R')
rankhospital("TX", "heart failure", 5000)
source('~/Coursera/HospitalQuality/rankhospital.R')
rankhospital("TX", "heart failure", 5000)
source('~/Coursera/HospitalQuality/rankhospital.R')
rankhospital("TX", "heart failure", 5000)
rankhospital("XX", "heart failure", 5)
source('~/Coursera/HospitalQuality/rankhospital.R')
rankhospital("XX", "heart failure", 5)
source('~/Coursera/HospitalQuality/rankhospital.R')
rankhospital("TX", "heart failure", 5000)
?order
readfile <- read.csv("~/Coursera/HospitalQuality/outcome-of-care-measures.csv", colClasses="character", header=TRUE)
rfile <- readfile[,c(2,7,11,17,23)]
names(rfile)
r <- grep("TX", rfile[,2], ignore.case=TRUE)
r
order(rfile[r,3])
order(rfile[r,3], na.rm=TRUE, decreasing=FALSE)
order(rfile[r,3], na.last=NA, decreasing=FALSE)
order(as.numeric(rfile[r,3]), na.last=NA, decreasing=FALSE)
